<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" version="2.5">

	<!-- 配置Spring配置文件的位置(所有的业务逻辑组件均有Spring负责管理) -->
	<!-- 如果不是WEB项目，可通过Spring的配置文件读取API来实例化been和调用been。 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/classes/applicationContext.xml,
			/WEB-INF/classes/daoContext.xml</param-value>
	</context-param>
	<!-- 使用ContextLoaderListener初始化Spring容器 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener
		</listener-class>
	</listener>
	
	<!-- 定义Struts2的FilterDispathcer的Filter
	用户的所有请求被纳入Structs2管理,由FilterDispathcer和Action共同充当MVC中的“Controller” -->
	<filter>
		<filter-name>struts2</filter-name>
		<filter-class>org.apache.struts2.dispatcher.FilterDispatcher
		</filter-class>
	</filter>
	<!-- FilterDispatcher用来初始化Struts2并且处理  所有 的WEB请求。 -->
	<filter-mapping>
		<filter-name>struts2</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!-- 定义图形验证码Servlet -->
	<servlet>
		<servlet-name>img</servlet-name>
		<servlet-class>org.zs.hrsystem.web.AuthImg</servlet-class>
	</servlet>
	<!-- 为图形验证码Servlet配置URL -->
	<servlet-mapping>
		<servlet-name>img</servlet-name>
		<url-pattern>/WEB-INF/jsp/authImg.jsp</url-pattern>
	</servlet-mapping>
	<!-- 定义Web应用的首页 -->
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>
	
	<!-- Log4j 初始化 Servlet -->
	<servlet>
	  <servlet-name>Log4jInit</servlet-name>
	  <servlet-class>org.zs.hrsystem.action.Log4jInit</servlet-class>
	  <init-param>
		   <param-name>log4j</param-name><!-- 这个是名字是下边路径配置的标识（好像KEY一样） -->
		   <param-value>/WEB-INF/classes/log4j.properties</param-value><!-- 这是容器初始化时候加载log4j配置文件的路径（这好像一个value）; -->
	  </init-param>
 	</servlet>
</web-app>
